/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ConsultationRegist,
  ConsultationRegistInterface,
} from "../ConsultationRegist";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getRegist",
    outputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_phone",
        type: "string",
      },
      {
        internalType: "string",
        name: "_doctorName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_session",
        type: "string",
      },
      {
        internalType: "string",
        name: "_date",
        type: "string",
      },
      {
        internalType: "string",
        name: "_gender",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symptom",
        type: "string",
      },
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "regists",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "phone",
        type: "string",
      },
      {
        internalType: "string",
        name: "doctorName",
        type: "string",
      },
      {
        internalType: "string",
        name: "session",
        type: "string",
      },
      {
        internalType: "string",
        name: "date",
        type: "string",
      },
      {
        internalType: "string",
        name: "symptom",
        type: "string",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "string",
        name: "gender",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_phone",
        type: "string",
      },
      {
        internalType: "string",
        name: "_doctorName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_session",
        type: "string",
      },
      {
        internalType: "string",
        name: "_date",
        type: "string",
      },
      {
        internalType: "string",
        name: "_gender",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symptom",
        type: "string",
      },
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "setRegist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061138f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632f6c918e1461004657806333fe2c9f1461007d578063afee3a3c14610099575b600080fd5b610060600480360381019061005b9190610b15565b6100d0565b604051610074989796959493929190610c13565b60405180910390f35b61009760048036038101906100929190610e23565b610533565b005b6100b360048036038101906100ae9190610b15565b61069b565b6040516100c7989796959493929190610f9d565b60405180910390f35b606080606080606080606060008060008a815481106100f2576100f161104c565b5b90600052602060002090600802019050806000018160010182600201836003018460040185600701866005018760060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687805461014f906110aa565b80601f016020809104026020016040519081016040528092919081815260200182805461017b906110aa565b80156101c85780601f1061019d576101008083540402835291602001916101c8565b820191906000526020600020905b8154815290600101906020018083116101ab57829003601f168201915b505050505097508680546101db906110aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610207906110aa565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b50505050509650858054610267906110aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610293906110aa565b80156102e05780601f106102b5576101008083540402835291602001916102e0565b820191906000526020600020905b8154815290600101906020018083116102c357829003601f168201915b505050505095508480546102f3906110aa565b80601f016020809104026020016040519081016040528092919081815260200182805461031f906110aa565b801561036c5780601f106103415761010080835404028352916020019161036c565b820191906000526020600020905b81548152906001019060200180831161034f57829003601f168201915b5050505050945083805461037f906110aa565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab906110aa565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b5050505050935082805461040b906110aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610437906110aa565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b50505050509250818054610497906110aa565b80601f01602080910402602001604051908101604052809291908181526020018280546104c3906110aa565b80156105105780601f106104e557610100808354040283529160200191610510565b820191906000526020600020905b8154815290600101906020018083116104f357829003601f168201915b505050505091509850985098509850985098509850985050919395975091939597565b60006040518061010001604052808a81526020018981526020018881526020018781526020018681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815260200185815250908060018154018082558091505060019003906000526020600020906008020160009091909190915060008201518160000190816105c39190611287565b5060208201518160010190816105d99190611287565b5060408201518160020190816105ef9190611287565b5060608201518160030190816106059190611287565b50608082015181600401908161061b9190611287565b5060a08201518160050190816106319190611287565b5060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e082015181600701908161068e9190611287565b5050505050505050505050565b600081815481106106ab57600080fd5b90600052602060002090600802016000915090508060000180546106ce906110aa565b80601f01602080910402602001604051908101604052809291908181526020018280546106fa906110aa565b80156107475780601f1061071c57610100808354040283529160200191610747565b820191906000526020600020905b81548152906001019060200180831161072a57829003601f168201915b50505050509080600101805461075c906110aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610788906110aa565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050908060020180546107ea906110aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610816906110aa565b80156108635780601f1061083857610100808354040283529160200191610863565b820191906000526020600020905b81548152906001019060200180831161084657829003601f168201915b505050505090806003018054610878906110aa565b80601f01602080910402602001604051908101604052809291908181526020018280546108a4906110aa565b80156108f15780601f106108c6576101008083540402835291602001916108f1565b820191906000526020600020905b8154815290600101906020018083116108d457829003601f168201915b505050505090806004018054610906906110aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610932906110aa565b801561097f5780601f106109545761010080835404028352916020019161097f565b820191906000526020600020905b81548152906001019060200180831161096257829003601f168201915b505050505090806005018054610994906110aa565b80601f01602080910402602001604051908101604052809291908181526020018280546109c0906110aa565b8015610a0d5780601f106109e257610100808354040283529160200191610a0d565b820191906000526020600020905b8154815290600101906020018083116109f057829003601f168201915b5050505050908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806007018054610a48906110aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610a74906110aa565b8015610ac15780601f10610a9657610100808354040283529160200191610ac1565b820191906000526020600020905b815481529060010190602001808311610aa457829003601f168201915b5050505050905088565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610af281610adf565b8114610afd57600080fd5b50565b600081359050610b0f81610ae9565b92915050565b600060208284031215610b2b57610b2a610ad5565b5b6000610b3984828501610b00565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b7c578082015181840152602081019050610b61565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ba482610b42565b610bae8185610b4d565b9350610bbe818560208601610b5e565b610bc781610b88565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bfd82610bd2565b9050919050565b610c0d81610bf2565b82525050565b6000610100820190508181036000830152610c2e818b610b99565b90508181036020830152610c42818a610b99565b90508181036040830152610c568189610b99565b90508181036060830152610c6a8188610b99565b90508181036080830152610c7e8187610b99565b905081810360a0830152610c928186610b99565b905081810360c0830152610ca68185610b99565b9050610cb560e0830184610c04565b9998505050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d0482610b88565b810181811067ffffffffffffffff82111715610d2357610d22610ccc565b5b80604052505050565b6000610d36610acb565b9050610d428282610cfb565b919050565b600067ffffffffffffffff821115610d6257610d61610ccc565b5b610d6b82610b88565b9050602081019050919050565b82818337600083830152505050565b6000610d9a610d9584610d47565b610d2c565b905082815260208101848484011115610db657610db5610cc7565b5b610dc1848285610d78565b509392505050565b600082601f830112610dde57610ddd610cc2565b5b8135610dee848260208601610d87565b91505092915050565b610e0081610bf2565b8114610e0b57600080fd5b50565b600081359050610e1d81610df7565b92915050565b600080600080600080600080610100898b031215610e4457610e43610ad5565b5b600089013567ffffffffffffffff811115610e6257610e61610ada565b5b610e6e8b828c01610dc9565b985050602089013567ffffffffffffffff811115610e8f57610e8e610ada565b5b610e9b8b828c01610dc9565b975050604089013567ffffffffffffffff811115610ebc57610ebb610ada565b5b610ec88b828c01610dc9565b965050606089013567ffffffffffffffff811115610ee957610ee8610ada565b5b610ef58b828c01610dc9565b955050608089013567ffffffffffffffff811115610f1657610f15610ada565b5b610f228b828c01610dc9565b94505060a089013567ffffffffffffffff811115610f4357610f42610ada565b5b610f4f8b828c01610dc9565b93505060c089013567ffffffffffffffff811115610f7057610f6f610ada565b5b610f7c8b828c01610dc9565b92505060e0610f8d8b828c01610e0e565b9150509295985092959890939650565b6000610100820190508181036000830152610fb8818b610b99565b90508181036020830152610fcc818a610b99565b90508181036040830152610fe08189610b99565b90508181036060830152610ff48188610b99565b905081810360808301526110088187610b99565b905081810360a083015261101c8186610b99565b905061102b60c0830185610c04565b81810360e083015261103d8184610b99565b90509998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110c257607f821691505b6020821081036110d5576110d461107b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261113d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611100565b6111478683611100565b95508019841693508086168417925050509392505050565b6000819050919050565b600061118461117f61117a84610adf565b61115f565b610adf565b9050919050565b6000819050919050565b61119e83611169565b6111b26111aa8261118b565b84845461110d565b825550505050565b600090565b6111c76111ba565b6111d2818484611195565b505050565b5b818110156111f6576111eb6000826111bf565b6001810190506111d8565b5050565b601f82111561123b5761120c816110db565b611215846110f0565b81016020851015611224578190505b611238611230856110f0565b8301826111d7565b50505b505050565b600082821c905092915050565b600061125e60001984600802611240565b1980831691505092915050565b6000611277838361124d565b9150826002028217905092915050565b61129082610b42565b67ffffffffffffffff8111156112a9576112a8610ccc565b5b6112b382546110aa565b6112be8282856111fa565b600060209050601f8311600181146112f157600084156112df578287015190505b6112e9858261126b565b865550611351565b601f1984166112ff866110db565b60005b8281101561132757848901518255600182019150602085019450602081019050611302565b868310156113445784890151611340601f89168261124d565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220c6ec018433a410b3c0c1980b99eab260807c2e8a919d97c5215f47fb9ae6ae9e64736f6c63430008110033";

type ConsultationRegistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConsultationRegistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConsultationRegist__factory extends ContractFactory {
  constructor(...args: ConsultationRegistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConsultationRegist> {
    return super.deploy(overrides || {}) as Promise<ConsultationRegist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConsultationRegist {
    return super.attach(address) as ConsultationRegist;
  }
  override connect(signer: Signer): ConsultationRegist__factory {
    return super.connect(signer) as ConsultationRegist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConsultationRegistInterface {
    return new utils.Interface(_abi) as ConsultationRegistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConsultationRegist {
    return new Contract(address, _abi, signerOrProvider) as ConsultationRegist;
  }
}
